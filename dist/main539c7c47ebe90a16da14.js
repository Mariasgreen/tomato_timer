!function(){"use strict";class t{constructor(){this.tasks=[],this.active_task=null}addTask(t){this.tasks.push(t)}activateTask(t){this.active_task=this.tasks.find((s=>s.id===t))}runTask(){this.active_task?console.log(`Running task: ${this.active_task.text}`):console.log("No active task.")}}class s{constructor(t,s){this.id=this.generateUniqueId(),this.text=t,this.count=0,this.importance=s}generateUniqueId(){return Math.random().toString(36).substring(2)+Date.now().toString(36)}}class e extends s{constructor(t){super(t,"important")}}class n extends s{constructor(t){super(t,"default")}}class a extends s{constructor(t){super(t,"so-so")}}class i{constructor(t,s){this.container=t,this.controller=s,this.taskList=this.createTaskListElement(),this.container.appendChild(this.taskList),this.addEventListeners()}createTaskListElement(){const t=document.createElement("ul");return t.className="pomodoro-tasks__quest-tasks",t}renderTaskList(t){this.taskList.innerHTML="",t.forEach(((t,s)=>{t.count=s+1;const e=document.createElement("li");e.className=`pomodoro-tasks__list-task ${t.importance}`,e.setAttribute("data-task-id",t.id),e.innerHTML=`\n        <span class="count-number">${t.count}</span>\n        <button class="pomodoro-tasks__task-text">${t.text}</button>\n        <button class="pomodoro-tasks__task-button"></button>\n      `,this.taskList.appendChild(e)}))}renderTaskForm(t){document.querySelector(".task-form").addEventListener("submit",(s=>{s.preventDefault();const e=document.getElementById("task-name"),n=e.value;t(n),e.value=""}))}renderActiveTask(t){const s=document.querySelector(".window__panel-title");t?(s.textContent=t.text,document.querySelector(".window__panel-task-text").textContent=`Томат ${t.count}`):s.textContent="No active task."}addEventListeners(){this.taskList.addEventListener("click",(t=>{if(t.target.classList.contains("pomodoro-tasks__task-text")){const s=t.target.closest(".pomodoro-tasks__list-task").getAttribute("data-task-id");this.controller.activateTask(s)}})),document.querySelector(".button.button-primary").addEventListener("click",(()=>{this.controller.runActiveTask()}))}}class r{constructor(t,s){this.timer=t,this.render=s,this.render.renderTaskForm(this.handleAddTask.bind(this)),this.render.renderTaskList(this.timer.tasks)}handleAddTask(t){let s;const i=document.querySelector(".button-importance").classList;s=i.contains("important")?new e(t):i.contains("so-so")?new a(t):new n(t),this.timer.addTask(s),this.render.renderTaskList(this.timer.tasks)}activateTask(t){this.timer.activateTask(t),this.render.renderActiveTask(this.timer.active_task)}runActiveTask(){this.timer.runTask()}}let o=0;const c=["default","important","so-so"];document.querySelector(".button-importance").addEventListener("click",(({target:t})=>{o+=1,o>=c.length&&(o=0);for(let s=0;s<c.length;s++)o===s?t.classList.add(c[s]):t.classList.remove(c[s])})),new class{constructor(){this.timer=new t,this.containerElement=document.querySelector(".pomodoro-tasks"),this.render=new i(this.containerElement,this),this.controller=new r(this.timer,this.render),this.activeTaskId=null,this.addEventListeners()}addEventListeners(){this.containerElement.addEventListener("click",(t=>{if(t.target.classList.contains("pomodoro-tasks__task-text")){const s=t.target.closest(".pomodoro-tasks__list-task").getAttribute("data-task-id");this.controller.activateTask(s)}})),document.querySelector(".button.button-primary").addEventListener("click",(()=>{this.controller.runActiveTask()}))}activateTask(t){this.timer.activateTask(t),this.activeTaskId=t,this.render.renderActiveTask(this.timer.active_task)}runActiveTask(){this.timer.runTask()}}}();